pipeline {
    agent any 

    options {
        timeout(time: 10, unit: 'MINUTES')
    }

    environment {
        ACR_NAME = "dyanxazizacr"
        registryUrl = "dyanxazizacr.azurecr.io"
        IMAGE_NAME = "nodejswebapp"
        IMAGE_TAG = "v1.0.0"
        registryCredential = "dyanxazizacr"
        SONAR_PROJECT_KEY = "unique_project_key" // Define your project's unique key here
    }

    stages { 
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/dyanaziz/nodejs-webapp-.git'
            }
        }

        stage('Run Sonarqube') {
            steps {
                script {
                    sh """
                        /var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/ibt-sonarqube/bin/sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY}
                    """
                }
            }
        }

        stage ('Build Docker image') {
            steps {
                script {
                    def dockerImage = docker.build("${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}", '.')
                }
            }
        }

        stage('Upload Image to ACR') {
            steps {   
                script {
                    docker.withRegistry("dyanxazizacr.azurecr.io", registryCredential) {
                        sh "docker push ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }
    }
}
